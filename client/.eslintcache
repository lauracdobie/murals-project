[{"/Users/lauradobie/codeclan_work/week_09/murals_project/client/src/index.js":"1","/Users/lauradobie/codeclan_work/week_09/murals_project/client/src/reportWebVitals.js":"2","/Users/lauradobie/codeclan_work/week_09/murals_project/client/src/App.js":"3","/Users/lauradobie/codeclan_work/week_09/murals_project/client/src/containers/MuralsContainer.js":"4","/Users/lauradobie/codeclan_work/week_09/murals_project/client/src/containers/MuralsService.js":"5","/Users/lauradobie/codeclan_work/week_09/murals_project/client/src/components/MuralMap.js":"6","/Users/lauradobie/codeclan_work/week_09/murals_project/client/src/components/MuralsList.js":"7","/Users/lauradobie/codeclan_work/week_09/murals_project/client/src/components/Mural.js":"8"},{"size":500,"mtime":1610294320802,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1610294320804,"results":"11","hashOfConfig":"10"},{"size":162,"mtime":1610381804065,"results":"12","hashOfConfig":"10"},{"size":1373,"mtime":1610399338346,"results":"13","hashOfConfig":"10"},{"size":396,"mtime":1610399534999,"results":"14","hashOfConfig":"10"},{"size":1650,"mtime":1610381804079,"results":"15","hashOfConfig":"10"},{"size":712,"mtime":1610394306678,"results":"16","hashOfConfig":"10"},{"size":1698,"mtime":1610399667804,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"fx5n8q",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lauradobie/codeclan_work/week_09/murals_project/client/src/index.js",[],["37","38"],"/Users/lauradobie/codeclan_work/week_09/murals_project/client/src/reportWebVitals.js",[],"/Users/lauradobie/codeclan_work/week_09/murals_project/client/src/App.js",[],"/Users/lauradobie/codeclan_work/week_09/murals_project/client/src/containers/MuralsContainer.js",["39"],"import {getMurals, updateDbMural} from './MuralsService';\nimport {useEffect, useState} from 'react';\nimport MuralsList from '../components/MuralsList';\nimport MuralMap from '../components/MuralMap';\n\nfunction MuralsContainer () {\n    \n    const [murals, setMurals] = useState([]);\n    useEffect(()=> {\n        getMurals() \n        .then((data) => {\n            console.log(data)\n            setMurals(data)\n        })\n\n    }, [])\n\n    const updateMural = (updatedMural) => {\n        //Updates mural document in database collection\n        updateDbMural(updatedMural);\n        console.log(updatedMural);\n\n        //Update murals list in front end\n        //Gets the index of the mural to update\n        const updatedMuralIndex = murals.findIndex(mural => mural._id === updatedMural._id);\n\n        //Creates a new array with all the murals in the murals array using spread\n        const updatedMurals = [...murals];\n\n        //Finds the mural to update by its index and sets its data to the updatedMural data\n        updatedMurals[updatedMuralIndex] = updatedMural;\n\n        //Sets the value of the orginal murals list to the updated array\n        setMurals(updatedMurals);\n\n    }\n\n    return (\n\n        <>\n            <h2>I am the murals container </h2>\n            <MuralsList murals={murals} updateMural={updateMural}/>\n        </>\n    )\n}\n\nexport default MuralsContainer;","/Users/lauradobie/codeclan_work/week_09/murals_project/client/src/containers/MuralsService.js",[],"/Users/lauradobie/codeclan_work/week_09/murals_project/client/src/components/MuralMap.js",["40","41","42"],"import {useState} from 'react';\nimport { Popup, MapContainer as Map, TileLayer, Marker } from 'react-leaflet';\nimport Mural from './Mural';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nconst MuralMap = ({murals}) => {\n\n    const [currentLocation, setCurrentLocation] = useState({lat: 55.86515, lng: -4.25763});\n    const [zoom, setZoom] = useState(14);\n    const markerIcon = L.icon({\n        iconUrl: \"https://cdn0.iconfinder.com/data/icons/small-n-flat/24/678111-map-marker-512.png\", \n        iconSize: [35, 35] \n    });\n\n    const getLatLng = murals.map(mural => {\n        return [mural.lat, mural.lng]\n    })\n\n    const muralMarkers = murals.map((mural, index) => {\n        return (\n            <>\n                <Marker key={index} position={[mural.lat, mural.lng]} icon={markerIcon} >\n                    <Popup>\n                        <Mural \n                            name={mural.name}\n                            artist={mural.artist}\n                            year={mural.year}\n                            instagram={mural.instagram}\n                            location={mural.location}\n                            description={mural.description}\n                        />\n                    </Popup>\n                </Marker>\n            </>\n        )\n    }) \n    return (\n        <Map center={currentLocation} zoom={zoom}>\n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            {muralMarkers}\n        </Map>\n    );\n}\n\nexport default MuralMap;","/Users/lauradobie/codeclan_work/week_09/murals_project/client/src/components/MuralsList.js",[],"/Users/lauradobie/codeclan_work/week_09/murals_project/client/src/components/Mural.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":4,"column":8,"nodeType":"49","messageId":"50","endLine":4,"endColumn":16},{"ruleId":"47","severity":1,"message":"51","line":9,"column":29,"nodeType":"49","messageId":"50","endLine":9,"endColumn":47},{"ruleId":"47","severity":1,"message":"52","line":10,"column":18,"nodeType":"49","messageId":"50","endLine":10,"endColumn":25},{"ruleId":"47","severity":1,"message":"53","line":16,"column":11,"nodeType":"49","messageId":"50","endLine":16,"endColumn":20},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'MuralMap' is defined but never used.","Identifier","unusedVar","'setCurrentLocation' is assigned a value but never used.","'setZoom' is assigned a value but never used.","'getLatLng' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]